// generated: {{.Timestamp}}
server_name: "{{.ServerName}}"
host: ::
port: 4222
http_port: 8222

pid_file: /var/run/nats-server.pid
cluster: {
    name: "{{.Region}}"
    listen: "{{.Host}}:7221"
    routes: [
        "nats-route://{{.Region}}.{{.AppName}}.internal:7221"
    ]
    connect_retries: 60
}
gateway: {
    name: "{{.Region}}"
    listen: "{{.Host}}:7222"
    gateways: [
        {{range .GatewayRegions}}{name: "{{.}}", urls:["nats://{{.}}.{{$.AppName}}.internal:7222"]},{{end}}
    ]
}
reconnect_error_reports: 1
resolver: {
    type: full
    # Directory in which account jwt will be stored
    dir: './jwt'
    # In order to support jwt deletion, set to true
    # If the resolver type is full delete will rename the jwt.
    # This is to allow manual restoration in case of inadvertent deletion.
    # To restore a jwt, remove the added suffix .delete and restart or send a reload signal.
    # To free up storage you must manually delete files with the suffix .delete.
    allow_delete: false
    # Interval at which a nats-server with a nats based account resolver will compare
    # it's state with one random nats based account resolver in the cluster and if needed,
    # exchange jwt and converge on the same set of jwt.
    interval: "2m"
    # limit on the number of jwt stored, will reject new jwt once limit is hit.
    limit: 1000
}